{"ast":null,"code":"var _jsxFileName = \"/home/vikash/Desktop/Reactjs/passwordgenerator/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from \"react\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  password: \"\",\n  length: 10,\n  includeUppercase: true,\n  includeNumbers: true,\n  includeSpecialChars: true\n};\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_LENGTH\":\n      return {\n        ...state,\n        length: action.payload\n      };\n    case \"TOGGLE_UPPERCASE\":\n      return {\n        ...state,\n        includeUppercase: !state.includeUppercase\n      };\n    case \"TOGGLE_NUMBERS\":\n      return {\n        ...state,\n        includeNumbers: !state.includeNumbers\n      };\n    case \"TOGGLE_SPECIAL_CHARS\":\n      return {\n        ...state,\n        includeSpecialChars: !state.includeSpecialChars\n      };\n    case \"GENERATE_PASSWORD\":\n      return {\n        ...state,\n        password: generatePassword(state)\n      };\n    default:\n      return state;\n  }\n};\nconst generatePassword = ({\n  length,\n  includeUppercase,\n  includeNumbers,\n  includeSpecialChars\n}) => {\n  // Generate password logic here\n  // ...\n  let generatedPassword = \"\";\n  for (let i = 0; i < length; i++) {\n    const randomIndex = Math.floor(Math.random() * allChars.length);\n    generatedPassword += allChars.charAt(randomIndex);\n  }\n  setPassword(generatedPassword);\n};\nfunction PasswordGenerator() {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const handleGeneratePassword = () => {\n    dispatch({\n      type: \"GENERATE_PASSWORD\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-8 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold mb-4\",\n        children: \"Password Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-2 font-medium\",\n          children: \"Password Length:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: state.length,\n          onChange: e => dispatch({\n            type: \"SET_LENGTH\",\n            payload: e.target.value\n          }),\n          className: \"w-full p-2 border rounded-md\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-2 font-medium\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: state.includeUppercase,\n            onChange: () => dispatch({\n              type: \"TOGGLE_UPPERCASE\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), \"Include Uppercase\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGeneratePassword,\n        className: \"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600\",\n        children: \"Generate Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), state.password && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 p-2 bg-gray-200 rounded-md\",\n        children: state.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(PasswordGenerator, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = PasswordGenerator;\nexport default PasswordGenerator;\nvar _c;\n$RefreshReg$(_c, \"PasswordGenerator\");","map":{"version":3,"names":["React","useReducer","jsxDEV","_jsxDEV","initialState","password","length","includeUppercase","includeNumbers","includeSpecialChars","reducer","state","action","type","payload","generatePassword","generatedPassword","i","randomIndex","Math","floor","random","allChars","charAt","setPassword","PasswordGenerator","_s","dispatch","handleGeneratePassword","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","checked","onClick","_c","$RefreshReg$"],"sources":["/home/vikash/Desktop/Reactjs/passwordgenerator/src/App.js"],"sourcesContent":["import React, { useReducer } from \"react\";\nimport \"./index.css\";\n\nconst initialState = {\n  password: \"\",\n  length: 10,\n  includeUppercase: true,\n  includeNumbers: true,\n  includeSpecialChars: true,\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_LENGTH\":\n      return { ...state, length: action.payload };\n    case \"TOGGLE_UPPERCASE\":\n      return { ...state, includeUppercase: !state.includeUppercase };\n    case \"TOGGLE_NUMBERS\":\n      return { ...state, includeNumbers: !state.includeNumbers };\n    case \"TOGGLE_SPECIAL_CHARS\":\n      return { ...state, includeSpecialChars: !state.includeSpecialChars };\n    case \"GENERATE_PASSWORD\":\n      return { ...state, password: generatePassword(state) };\n    default:\n      return state;\n  }\n};\n\nconst generatePassword = ({\n  length,\n  includeUppercase,\n  includeNumbers,\n  includeSpecialChars,\n}) => {\n  // Generate password logic here\n  // ...\n  let generatedPassword = \"\";\n  for (let i = 0; i < length; i++) {\n    const randomIndex = Math.floor(Math.random() * allChars.length);\n    generatedPassword += allChars.charAt(randomIndex);\n  }\n\n  setPassword(generatedPassword);\n};\n\nfunction PasswordGenerator() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const handleGeneratePassword = () => {\n    dispatch({ type: \"GENERATE_PASSWORD\" });\n  };\n\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100\">\n      <div className=\"bg-white p-8 rounded-lg shadow-lg\">\n        <h2 className=\"text-2xl font-semibold mb-4\">Password Generator</h2>\n        <div className=\"mb-4\">\n          <label className=\"block mb-2 font-medium\">Password Length:</label>\n          <input\n            type=\"number\"\n            value={state.length}\n            onChange={(e) =>\n              dispatch({ type: \"SET_LENGTH\", payload: e.target.value })\n            }\n            className=\"w-full p-2 border rounded-md\"\n          />\n        </div>\n        <div className=\"mb-4\">\n          <label className=\"block mb-2 font-medium\">\n            <input\n              type=\"checkbox\"\n              checked={state.includeUppercase}\n              onChange={() => dispatch({ type: \"TOGGLE_UPPERCASE\" })}\n            />\n            Include Uppercase\n          </label>\n          {/* Similar checkboxes for includeNumbers and includeSpecialChars */}\n        </div>\n        <button\n          onClick={handleGeneratePassword}\n          className=\"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600\"\n        >\n          Generate Password\n        </button>\n        {state.password && (\n          <div className=\"mt-4 p-2 bg-gray-200 rounded-md\">\n            {state.password}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default PasswordGenerator;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}