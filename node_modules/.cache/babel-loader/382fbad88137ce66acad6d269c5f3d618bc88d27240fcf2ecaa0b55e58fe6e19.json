{"ast":null,"code":"var _jsxFileName = \"/home/vikash/Desktop/Reactjs/passwordgenerator/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from \"react\";\nimport \"./index.css\";\n\n// Reducer function to manage state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_LENGTH\":\n      return {\n        ...state,\n        length: action.payload\n      };\n    case \"TOGGLE_INCLUDE_UPPERCASE\":\n      return {\n        ...state,\n        includeUppercase: !state.includeUppercase\n      };\n    case \"TOGGLE_INCLUDE_NUMBERS\":\n      return {\n        ...state,\n        includeNumbers: !state.includeNumbers\n      };\n    case \"TOGGLE_INCLUDE_SPECIAL_CHARS\":\n      return {\n        ...state,\n        includeSpecialChars: !state.includeSpecialChars\n      };\n    case \"SET_PASSWORD\":\n      return {\n        ...state,\n        password: action.payload\n      };\n    default:\n      return state;\n  }\n};\nfunction PasswordGenerator() {\n  _s();\n  const initialState = {\n    password: \"\",\n    length: 12,\n    includeUppercase: true,\n    includeNumbers: true,\n    includeSpecialChars: true\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const generatePassword = () => {\n    const {\n      length,\n      includeUppercase,\n      includeNumbers,\n      includeSpecialChars\n    } = state;\n    // Generating password logic (same as previous examples)\n\n    let generatedPassword = \"\";\n    for (let i = 0; i < length; i++) {\n      const randomIndex = Math.floor(Math.random() * allChars.length);\n      generatedPassword += allChars.charAt(randomIndex);\n    }\n    dispatch({\n      type: \"SET_PASSWORD\",\n      payload: generatePassword\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-8 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold mb-4\",\n        children: \"Password Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-2 font-medium\",\n          children: \"Password Length:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: state.length,\n          onChange: e => dispatch({\n            type: \"SET_LENGTH\",\n            payload: e.target.value\n          }),\n          className: \"w-full p-2 border rounded-md\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generatePassword,\n        className: \"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600\",\n        children: \"Generate Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), state.password && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 p-2 bg-gray-200 rounded-md\",\n        children: state.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(PasswordGenerator, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = PasswordGenerator;\nexport default PasswordGenerator;\nvar _c;\n$RefreshReg$(_c, \"PasswordGenerator\");","map":{"version":3,"names":["React","useReducer","jsxDEV","_jsxDEV","reducer","state","action","type","length","payload","includeUppercase","includeNumbers","includeSpecialChars","password","PasswordGenerator","_s","initialState","dispatch","generatePassword","generatedPassword","i","randomIndex","Math","floor","random","allChars","charAt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/vikash/Desktop/Reactjs/passwordgenerator/src/App.js"],"sourcesContent":["import React, { useReducer } from \"react\";\nimport \"./index.css\";\n\n// Reducer function to manage state\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_LENGTH\":\n      return { ...state, length: action.payload };\n    case \"TOGGLE_INCLUDE_UPPERCASE\":\n      return { ...state, includeUppercase: !state.includeUppercase };\n    case \"TOGGLE_INCLUDE_NUMBERS\":\n      return { ...state, includeNumbers: !state.includeNumbers };\n    case \"TOGGLE_INCLUDE_SPECIAL_CHARS\":\n      return { ...state, includeSpecialChars: !state.includeSpecialChars };\n    case \"SET_PASSWORD\":\n      return { ...state, password: action.payload };\n    default:\n      return state;\n  }\n};\n\nfunction PasswordGenerator() {\n  const initialState = {\n    password: \"\",\n    length: 12,\n    includeUppercase: true,\n    includeNumbers: true,\n    includeSpecialChars: true,\n  };\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const generatePassword = () => {\n    const { length, includeUppercase, includeNumbers, includeSpecialChars } =\n      state;\n    // Generating password logic (same as previous examples)\n\n     let generatedPassword = \"\";\n     for (let i = 0; i < length; i++) {\n       const randomIndex = Math.floor(Math.random() * allChars.length);\n       generatedPassword += allChars.charAt(randomIndex);\n     }\n     \n    dispatch({ type: \"SET_PASSWORD\", payload: generatePassword });\n  };\n\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100\">\n      <div className=\"bg-white p-8 rounded-lg shadow-lg\">\n        <h2 className=\"text-2xl font-semibold mb-4\">Password Generator</h2>\n        <div className=\"mb-4\">\n          <label className=\"block mb-2 font-medium\">Password Length:</label>\n          <input\n            type=\"number\"\n            value={state.length}\n            onChange={(e) =>\n              dispatch({ type: \"SET_LENGTH\", payload: e.target.value })\n            }\n            className=\"w-full p-2 border rounded-md\"\n          />\n        </div>\n        {/* Similar components for toggling includeUppercase, includeNumbers, and includeSpecialChars */}\n        <button\n          onClick={generatePassword}\n          className=\"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600\"\n        >\n          Generate Password\n        </button>\n        {state.password && (\n          <div className=\"mt-4 p-2 bg-gray-200 rounded-md\">\n            {state.password}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default PasswordGenerator;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAO,aAAa;;AAEpB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACjC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,YAAY;MACf,OAAO;QAAE,GAAGF,KAAK;QAAEG,MAAM,EAAEF,MAAM,CAACG;MAAQ,CAAC;IAC7C,KAAK,0BAA0B;MAC7B,OAAO;QAAE,GAAGJ,KAAK;QAAEK,gBAAgB,EAAE,CAACL,KAAK,CAACK;MAAiB,CAAC;IAChE,KAAK,wBAAwB;MAC3B,OAAO;QAAE,GAAGL,KAAK;QAAEM,cAAc,EAAE,CAACN,KAAK,CAACM;MAAe,CAAC;IAC5D,KAAK,8BAA8B;MACjC,OAAO;QAAE,GAAGN,KAAK;QAAEO,mBAAmB,EAAE,CAACP,KAAK,CAACO;MAAoB,CAAC;IACtE,KAAK,cAAc;MACjB,OAAO;QAAE,GAAGP,KAAK;QAAEQ,QAAQ,EAAEP,MAAM,CAACG;MAAQ,CAAC;IAC/C;MACE,OAAOJ,KAAK;EAChB;AACF,CAAC;AAED,SAASS,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAMC,YAAY,GAAG;IACnBH,QAAQ,EAAE,EAAE;IACZL,MAAM,EAAE,EAAE;IACVE,gBAAgB,EAAE,IAAI;IACtBC,cAAc,EAAE,IAAI;IACpBC,mBAAmB,EAAE;EACvB,CAAC;EAED,MAAM,CAACP,KAAK,EAAEY,QAAQ,CAAC,GAAGhB,UAAU,CAACG,OAAO,EAAEY,YAAY,CAAC;EAE3D,MAAME,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAM;MAAEV,MAAM;MAAEE,gBAAgB;MAAEC,cAAc;MAAEC;IAAoB,CAAC,GACrEP,KAAK;IACP;;IAEC,IAAIc,iBAAiB,GAAG,EAAE;IAC1B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGZ,MAAM,EAAEY,CAAC,EAAE,EAAE;MAC/B,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGC,QAAQ,CAACjB,MAAM,CAAC;MAC/DW,iBAAiB,IAAIM,QAAQ,CAACC,MAAM,CAACL,WAAW,CAAC;IACnD;IAEDJ,QAAQ,CAAC;MAAEV,IAAI,EAAE,cAAc;MAAEE,OAAO,EAAES;IAAiB,CAAC,CAAC;EAC/D,CAAC;EAED,oBACEf,OAAA;IAAKwB,SAAS,EAAC,oEAAoE;IAAAC,QAAA,eACjFzB,OAAA;MAAKwB,SAAS,EAAC,mCAAmC;MAAAC,QAAA,gBAChDzB,OAAA;QAAIwB,SAAS,EAAC,6BAA6B;QAAAC,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnE7B,OAAA;QAAKwB,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnBzB,OAAA;UAAOwB,SAAS,EAAC,wBAAwB;UAAAC,QAAA,EAAC;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAClE7B,OAAA;UACEI,IAAI,EAAC,QAAQ;UACb0B,KAAK,EAAE5B,KAAK,CAACG,MAAO;UACpB0B,QAAQ,EAAGC,CAAC,IACVlB,QAAQ,CAAC;YAAEV,IAAI,EAAE,YAAY;YAAEE,OAAO,EAAE0B,CAAC,CAACC,MAAM,CAACH;UAAM,CAAC,CACzD;UACDN,SAAS,EAAC;QAA8B;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAEN7B,OAAA;QACEkC,OAAO,EAAEnB,gBAAiB;QAC1BS,SAAS,EAAC,+DAA+D;QAAAC,QAAA,EAC1E;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACR3B,KAAK,CAACQ,QAAQ,iBACbV,OAAA;QAAKwB,SAAS,EAAC,iCAAiC;QAAAC,QAAA,EAC7CvB,KAAK,CAACQ;MAAQ;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjB,EAAA,CAvDQD,iBAAiB;AAAAwB,EAAA,GAAjBxB,iBAAiB;AAyD1B,eAAeA,iBAAiB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}