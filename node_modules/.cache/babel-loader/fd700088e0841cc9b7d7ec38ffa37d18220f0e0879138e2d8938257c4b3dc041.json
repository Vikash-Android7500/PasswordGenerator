{"ast":null,"code":"var _jsxFileName = \"/home/vikash/Desktop/Reactjs/PasswordGenerator/src/Componets/PasswordGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { FaCopy } from \"react-icons/fa6\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_LENGTH\":\n      return {\n        ...state,\n        length: action.payload\n      };\n    case \"TOGGLE_INCLUDE_UPPERCASE\":\n      return {\n        ...state,\n        includeUppercase: !state.includeUppercase\n      };\n    case \"TOGGLE_INCLUDE_NUMBERS\":\n      return {\n        ...state,\n        includeNumbers: !state.includeNumbers\n      };\n    case \"TOGGLE_INCLUDE_SPECIAL_CHARS\":\n      return {\n        ...state,\n        includeSpecialChars: !state.includeSpecialChars\n      };\n    case \"SET_PASSWORD\":\n      return {\n        ...state,\n        password: action.payload\n      };\n    default:\n      return state;\n  }\n};\nconst PasswordGenerator = () => {\n  _s();\n  const initialState = {\n    password: \"\",\n    length: 12,\n    includeUppercase: true,\n    includeNumbers: true,\n    includeSpecialChars: true\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const generatePassword = () => {\n    const {\n      length,\n      includeUppercase,\n      includeNumbers,\n      includeSpecialChars\n    } = state;\n    // logic.\n    if (!generatePassword) {\n      toast.error(\"No Password !\");\n    } else {\n      const lowercaseChars = \"abcdefghijklmnopqrstuvwxyz\";\n      const uppercaseChars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n      const numberChars = \"0123456789\";\n      const specialChars = \"!#$%&'()*+,-./:;<=>?@[]^_`{|}~\";\n      let allChars = lowercaseChars;\n      if (includeUppercase) allChars += uppercaseChars;\n      if (includeNumbers) allChars += numberChars;\n      if (includeSpecialChars) allChars += specialChars;\n      let generatedPassword = \"\";\n      for (let i = 0; i < length; i++) {\n        const randomIndex = Math.floor(Math.random() * allChars.length);\n        generatedPassword += allChars.charAt(randomIndex);\n      }\n      dispatch({\n        type: \"SET_PASSWORD\",\n        payload: generatedPassword\n      });\n      toast.success(\"Generator Password ðŸ˜€\");\n    }\n  };\n  const copyPasswordToClipboard = () => {\n    const passwordField = document.getElementById(\"password-field\");\n    if (!passwordField) {\n      toast.error(\"Click Generator Button !\");\n    } else {\n      passwordField.select();\n      document.execCommand(\"copy\");\n      toast.success(\"Password Copy\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"html\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(PasswordGenerator, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = PasswordGenerator;\nexport default PasswordGenerator;\nvar _c;\n$RefreshReg$(_c, \"PasswordGenerator\");","map":{"version":3,"names":["React","useReducer","toast","FaCopy","jsxDEV","_jsxDEV","reducer","state","action","type","length","payload","includeUppercase","includeNumbers","includeSpecialChars","password","PasswordGenerator","_s","initialState","dispatch","generatePassword","error","lowercaseChars","uppercaseChars","numberChars","specialChars","allChars","generatedPassword","i","randomIndex","Math","floor","random","charAt","success","copyPasswordToClipboard","passwordField","document","getElementById","select","execCommand","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/vikash/Desktop/Reactjs/PasswordGenerator/src/Componets/PasswordGenerator.js"],"sourcesContent":["import React, { useReducer } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { FaCopy } from \"react-icons/fa6\";\n \nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_LENGTH\":\n      return { ...state, length: action.payload };\n    case \"TOGGLE_INCLUDE_UPPERCASE\":\n      return { ...state, includeUppercase: !state.includeUppercase };\n    case \"TOGGLE_INCLUDE_NUMBERS\":\n      return { ...state, includeNumbers: !state.includeNumbers };\n    case \"TOGGLE_INCLUDE_SPECIAL_CHARS\":\n      return { ...state, includeSpecialChars: !state.includeSpecialChars };\n    case \"SET_PASSWORD\":\n      return { ...state, password: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst PasswordGenerator = () => {\n  const initialState = {\n    password: \"\",\n    length: 12,\n    includeUppercase: true,\n    includeNumbers: true,\n    includeSpecialChars: true,\n  };\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const generatePassword = () => {\n    const { length, includeUppercase, includeNumbers, includeSpecialChars } = state;\n    // logic.\n   if (!generatePassword) {\n    toast.error(\"No Password !\");\n   }\n   else {\n     const lowercaseChars = \"abcdefghijklmnopqrstuvwxyz\";\n     const uppercaseChars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n     const numberChars = \"0123456789\";\n     const specialChars = \"!#$%&'()*+,-./:;<=>?@[]^_`{|}~\";\n\n     let allChars = lowercaseChars;\n     if (includeUppercase) allChars += uppercaseChars;\n     if (includeNumbers) allChars += numberChars;\n     if (includeSpecialChars) allChars += specialChars;\n\n     let generatedPassword = \"\";\n     for (let i = 0; i < length; i++) {\n       const randomIndex = Math.floor(Math.random() * allChars.length);\n       generatedPassword += allChars.charAt(randomIndex);\n     }\n\n     dispatch({ type: \"SET_PASSWORD\", payload: generatedPassword });\n     toast.success(\"Generator Password ðŸ˜€\");\n    }\n  };\n\n\n\n  const copyPasswordToClipboard = () => {\n    const passwordField = document.getElementById(\"password-field\");\n    if (!passwordField) {\n      toast.error(\"Click Generator Button !\");\n    }\n    else{\n       passwordField.select();\n       document.execCommand(\"copy\");\n       toast.success(\"Password Copy\");\n    }\n  };\n\n  return (\n    <html>\n      \n    </html>\n  );\n}\n\nexport default PasswordGenerator;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}